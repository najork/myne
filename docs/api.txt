API Endpoints
=============

Version 0.0.7

// Create new user
POST /create
    Body Parameters: username (string), password (string)
    Response Parameters: user_id (integer)

// Login
POST /login
    Body Parameters: username (string), password (string)
    Response Parameters: user_id (integer), token (string), expires (integer)

// Bearer token auth required for all /api endpoints

// List all schools
GET /api/schools
    Response Parameters: schools (array of school objects)

// Get school
GET /api/schools/:school_id
    Request Parameters: school_id (integer)
    Response Parameters: school object { school_id (integer), name (string) }

// Get all games for school
GET /api/schools/:school_id/games
    Request Parameters: school_id (integer)
    Response Parameters: games (array of game objects)

// Get game
GET /api/games/:game_id
    Request Parameters: game_id (integer)
    Response Parameters: game object { game_id (integer), home_team_id (integer), away_team_id (integer), date (string) }

// Get all tickets for game
GET /api/games/:game_id/tickets
    Request Parameters: game_id (integer)
    Response Parameters: tickets (array of ticket objects)

// Create new ticket (note: price in cents)
POST /api/games/:game_id/tickets/create
    Request Parameters: game_id (integer)
    Query Parameters: section (integer), row (integer), seat (integer), price (integer)
    Response Parameters: ticket_id (integer)

// Get ticket
GET /api/tickets/:ticket_id
    Request Parameters: ticket_id (integer)
    Response Parameters: ticket object { ticket_id (integer), game_id (integer), seller_id (integer), section (integer), row (integer), seat (integer), price (integer), sold (boolean) }

// Update existing ticket
POST /api/tickets/:ticket_id/update
    Request Parameters: ticket_id (integer)
    Query Parameters: price (integer, optional), sold (boolean, optional)

// Destroy existing ticket
POST /api/tickets/:ticket_id/destroy
    Request Parameters: ticket_id (integer)
